C++ Programming language 

C++ programming was developed by Bjarne Stroustrup as a extension version of c language as in c language their is no concept of oops , and it will be very difficult to manage large code in c language 
in C++ it does not follow the complete oops concept infact it is a hybrid or partial oops based because it has class and normal command section both thus make it more flexible 

ADVANTAGE OF C++ 
1)As it is based on opps thus allow us to manage code into resuable and in a structure way
2)In C++ we have a concept of  std( standard template library) they are just inbuilt library or function for especific task we can directly use by calling
3)It is a mid level language because it has features of both high + low , in high it has concept of oops, std and in low segment it has concept of pointers , direct memory allocation , thus make it mid level language.
4)Due to controbility towards direct memory managment it make it suitable for game development , software development e.t.c.


DIFFERENT DATA TYPES IN C++
1) PRIMARY - int , char , bool , double , float , void 
2) DERIVED - function , array , pointers , references 
3) USERDEFINED - Class , structure , union , enum


REFERENCES CONCEPT IN C++ 
normally in c++ refernce means just giving a nickname to some variable and when we call it actually referes to that variable , means same memory is used by two different names denoted by &.

CALL BY REFERENCES AND CALL BY VALUE CONCEPT
in call by reference we actually passing the variable the actual varible means any changes in function will be reflected in actual as well , on other hand pass by value means we are passing a copy of the variable and any changes won't reflect on actual ones
if & is their in function then it is pass by reference

TOKENS 
so tokens are smallest individual unit of programming and they are keywords, constants , identifiers , string
keywords - these are kind of reserved word like if , else , for cannot use for naming the variable
identifiers - used to indentify the variables
constant - to declare some constant values 


STRUCT VS CLASS 
 Both of these concept comes under the oops concept 
 Struct -> Mainly it is used to store light weigth objects and has by default inbuit public access , it also store variable as pass by value form
 Class -> in class it is by default private and we cannot use them directly and it also stores values by pass by reference type 

Pointer vs Reference 
 Pointers are normally used to store memory address of other variable and references simply just directly referes to that variable , we use * for pointers , pointers can hold null value and called as null pointer whereas reference cannot hold null value.

FUNCTION OVERLOADING VS OPERATOR OVERLOADING 
 simply when we called function with same name with multiple parameters then it is function overloading and when we want to use uoperators in user defined data types then we need to overload the operator calle operator overloading

ARRAY VS LINKED LIST
 array are the storing data type means they store similar type of data and we have to define size for storage first , only static data type can store and cannot be resizable on other hand linked list is like a chain where it is dynamic and connected with the help of 
 pointer to each other , elements in array are easier to aceess , and also use less memeory then list.

PREFIX VS POSTFIX
these are two concept used in coding pre means before and post means after , in pre value get updateed first then actual value , and in post value update after the actual value is used.

NEW VS MALLOC
both of them are used for memory alocation but has difference, in new it is used to allocate object memory storage in c++ and it calls constructor of object automatically, thus much faster on other hand malloc is normally used in c language and has same
work as new but it is slow and required complete manual setting and we have to call constructor for each object every time.

VIRTUAL FUNCTION VS PURE VIRTUAL FUNCTION
so both of the concepts are used to achieve polymorphism ( which has mainy forms) , so in virtual function , a function is declare by "virtual" keyword in base class and can be used by derived class, it is likely to gave excess of modification in derived class to achieve polymorphism and objects can also created in derived class in virtual function
on other hand pure virtual function are used to achieve polymorphism and mainly used in abstract class(do not have identity in base class just provide a blueprint to other) and pure virtual function are marked with 0 at end , so basically it doenot have any structure and hence we cannot create objects from it , it gave excess to derived class to implemenetd they own functionality by following the basic structure to achieve polymorphism.


CLASS AND OBJECTS 
class and object are two important concept of oops infact oops is based on that only, so classes are like to blueprint or factory to produce a object, class consist of data member and member function , and objects are created by using this parameters of class, in simple terms class is like a factory in which equipments are placed and by the help of equipments different different products( objects) are created.

FUNCTION OVERRIDING 
function overriding comes under the runtime polymorphism in which a function with same name , same parameters as it was declare in parent class is used in derived class , just behaviour is only changed.

INHERITANCE
means we declare a parent class with some attributes and derived class or child class is made by parent class uses that attributes , just like parent child relationship , child has features of parents , but it has something of its own also
In simple terms, the child class "inherits" or "extends" the properties and methods of the parent class. It's like saying, "I want to create a new class that has all the features of this existing class, plus some additional features of its own."

TYPES OF INHERITANCE
their are mainly 6 types of inheritance 1) single 2) multilevel 3) multiplevel 4) hybrid 5) hierarical 6) virtual level 

* in single child class is derived from one base class only
* in mutiple child class is derived from two or more base class
* multiplelevel child class id derived from another child class
* hybrid when we use all concepts 
* hierarical in this multiple child class are made from one base class
*virtual this concept is used when we wanted only one copy of instance(base class) like their is a base class 
 animal you make two derived class dog, cat now you want to make another class name pet from dog, cat but you 
 get two copies of animal so to overcome this use virtual keyword to get only one copy.


POLYMORPHISM AND ITS TYPE 
so polymorphism simply meaning having many forms or types o ability of a msg to display in  more than one form like best example for that is of security guard it cane be of celebrity or mey be normal society gurad or personal guard . their are mainly two type of polymorphism 
1) Static polymorphism
2) Runtime polymorphism 
=> Static polymorphism also called as compile time or early binding it has also two
   * function overloading 
   * operator overloading
=> runtime also called as late binding and it has concept of 
   * function overriding 
   * virtual functions 

CONSTRUCTOR AND TYPES
So in c++ constructor is a special member function in class that automatically call when we created a object its main function is to provide intial attributes of a object , ensure object starts with a define state and it has same name as class, and can be overloaded, if we doen't declare constructor in object making then automatically by default constructor is made with no arguments
they are of mainly 3 types 1) default 2) parametrize 3) copy
* default constructor has no parameters
* parametrize has some parameters 
* copy constructor this are used when we want to create a copy of exsisting object in a class

CONSTRUCTOR OVERLOADING VS DESTRUCTOR OVERLOADING 
=> simpley meaning we can create multiple constructor with same name but different parameters and gave us flexibility to make different objects using different constructor present in same class
=>we cannot overload a destructor their could be only one dectructor per class and it has no arguments  or parameters. ( by nature)

DELETE [] VS DELETE
so delete is used to delete single object made by new while delete[] is used for delete array of objects made by new[] , delete[] is used to delete whole arrray while delete is used to delete single pointer

FRIEND CLASS VS FRIEND FUNCTION CONCEPTS
